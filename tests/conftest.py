import pytest
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
import sys
import os
import allure
import shutil
import logging


# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏ Allure –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º —Å–µ—Å—Å–∏–∏
@pytest.hookimpl(tryfirst=True)
def pytest_sessionstart(session):
    for folder in ['allure-results', 'allure-report']:
        if os.path.exists(folder):
            shutil.rmtree(folder)
            print(f"[INFO] –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder}")


# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), ".")))


# –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è WebDriver
@pytest.fixture
def driver():
    options = Options()

    # –í–∫–ª—é—á–∞–µ–º headless-—Ä–µ–∂–∏–º –≤ CI
    if os.getenv("CI") == "true":
        options.add_argument("--headless")

    options.add_argument("--window-size=1920,1080")
    driver = webdriver.Chrome(options=options)
    yield driver
    driver.quit()


# –°–∫—Ä–∏–Ω—à–æ—Ç –≤ Allure –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞
@pytest.hookimpl(hookwrapper=True)
def pytest_runtest_makereport(item):
    outcome = yield
    report = outcome.get_result()

    if report.when == "call" and report.failed:
        driver = item.funcargs.get("driver", None)
        if driver:
            try:
                screenshot = driver.get_screenshot_as_png()
                allure.attach(screenshot, name="screenshot", attachment_type=allure.attachment_type.PNG)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç: {e}")


# –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
@pytest.fixture(autouse=True)
def log_test_start_and_end(request):
    logging.getLogger().handlers.clear()  # –û—á–∏—Å—Ç–∫–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
    logging.info(f"üü¢ START TEST: {request.node.name}")
    yield
    logging.info(f"üî¥ END TEST: {request.node.name}")
